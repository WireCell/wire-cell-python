#!/usr/bin/python3
'''
Commands to work with Bee server and files.
'''

import click
from difflib import unified_diff
from wirecell.util.cli import context
from .ana import Summary, levels as bee_levels
from .data import load as load_bee

@context("bee")
def cli(ctx):
    '''
    Wire Cell Bee helpers
    '''
    pass


@cli.command("summary")
@click.option("-d","--depth", type=click.Choice(bee_levels), default="cluster",
              help="The level of depth to generate the summary")
@click.argument("files", nargs=-1)
@click.pass_context
def cmd_summary(ctx, depth, files):
    '''
    Print summary of Bee files (.zip or .json).

    The summary is printed to the given given level of depth.  Default is
    cluster-level info.
    '''
    for fname in files:
        s = Summary(load_bee(fname), depth)
        print(f'{fname}:\n{s}')


@cli.command("diff")
@click.option("-d","--depth", type=click.Choice(bee_levels), default="cluster",
              help="The level of depth to consider for difference")
@click.argument("files", nargs=2)
@click.pass_context
def cmd_diff(ctx, depth, files):
    '''
    Diff two Bee files (pair of .zip or pair of .json).

    This analyzes the Bee data files and emits a summary for each to the given
    level of depth.  Default is cluster-level info.  The diff is based on the
    same text generated by the "summary" command.
    '''
    texts = [str(Summary(load_bee(fname), depth)) for fname in files]
    ud = unified_diff(texts[0].splitlines(),
                      texts[1].splitlines(),
                      *files)
    print('\n'.join(ud))

    pass

def main():
    cli(obj=dict())

if '__main__' == __name__:
    main()
    
