#+TITLE: Wire Cell Toolkit Python

* What's here.

This package holds some Python modules that support Wire Cell Toolkit.
Currently this is a stand-alone package that does not depend directly
on the C++ packages of WCT.

Some of the functionality provided includes converters and generators
of major WCT input data files including:

- field response functions
- wire geometry
- diagnostic plots

* Installation

#+BEGIN_EXAMPLE
  $ python3 -m venv venv
  $ source venv/bin/activate
  $ cd wire-cell-python
  $ pip install -r requirements/base.txt
  $ pip install -r requirements/img.txt
  $ pip install -r requirements/sigproc.txt
  $ pip install -e .
#+END_EXAMPLE

If you have trouble installing ~mayavi~ via ~pip~ consider installing it
as a system package and then making the ~venv~ with:

#+begin_example
  $ python3 -m venv venv --system-site-packages
#+end_example

If you have trouble installing ~gojsonnet~ via ~pip~ consider replacing it
to ~jsonnet~ in requirements/base.txt and setup.py. In addition, commenting
out ~moo~ in setup.py might also help decouple with ~gojsonnet~

* Use

In fresh shells must repeat:

#+BEGIN_EXAMPLE
  $ source venv/bin/activate
#+END_EXAMPLE

* Others


** ZIO

The ZIO Python package can provide some functionality that WCT may
make use of (flow/domo brokers).  It's installation is somewhat
irregular so a script is provided to help.  It will also install the
~wirecell~ Python module.

#+begin_example
  $ python3 -m venv venv
  $ source venv/bin/activate
  $ ./zioinst.sh
#+end_example

* Command line interfaces

Each main ~wirecell.<module>~ exposes most of its functionality via a
command line interface named ~wirecell-<module>~.  For example:

#+BEGIN_EXAMPLE
  $ wirecell-sigproc --help
  Usage: wirecell-sigproc [OPTIONS] COMMAND [ARGS]...

    Wire Cell Signal Processing Features

  Options:
    --help  Show this message and exit.

  Commands:
    convert-garfield              Convert an archive of a Garfield fileset...
    plot-garfield-track-response
#+END_EXAMPLE

If your shell supports it, see what commands are available with TAB
completion:

#+begin_example
  $ wirecell-<TAB><TAB>
#+end_example

* Documentation

In addition to the online ~-h/--help~ for main and sub commands, some
notes on specific commands are in [[file:docs/]].
